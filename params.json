{"note":"Don't delete this file! It's used internally to help with page regeneration.","google":"UA-37674487-1","name":"SCOBot","tagline":"SCORM 2004 / 1.2 Content API. Managed code, unit tests.","body":"### Greetings\r\nI started this project back in 2009.  Mostly to try and assist anyone new to Shareable Content Object Reference Model (SCORM), used for e-learning and portability between Learning Management (LMS) systems.  There are a few 3rd Party libraries out there, and I wanted something more complete, and open so the rest of the net is engaged.  E-Learning is really a end-to-end journey that can have you pulling your hair out at multiple levels.  I wanted to roll up all the things we commonly do into logical interfaces that give you the option to go commando, or take the kitchen sink with you.  We've all been 'that guy' at some point lugging around hundreds of kilobytes of JavaScript and only using a small subset of its functionality.  I wanted to keep this around < 30KB as a full featured support for SCORM 2004, and like I mentioned, if you choose for just base support, keep it much smaller < 10KB.\r\n\r\n### Common Pitfalls\r\nSCORM is not a web service.  Though it does pass data back and forth, the LMS manages this from client to server.  As a Shareable Content Object (SCO) we connect directly to a local variable the LMS provides called ``` API_1484_11 ```.  Or if your in SCORM 1.2 its just called ``` API ```.  This is JavaScript-to-JavaScript communication.  No frills, no gimmicks and the Content SCORM_API/SCOBot I've written will connect directly with the LMS and begin to take over to do all the things we commonly need SCORM to do.  I've been in several situations where people tend to think SCORM comes with all the functionality needed to remain true to the specification, but this is not the case.  It does however supply you the mechanisms to get and set values in a organized Computer Managed Instruction (CMI) object.\r\n\r\nIt's normally not clear right off the bat how it all fits together. This will come in time and as I've mentioned in other areas of the project, I can't wrap up hundreds of pages of documentation Advanced Distributed Learning (ADL) has into a few sentences.  You really need to just dive in.\r\n\r\nThe LMS will manage the specification by enforcing the Read, Write, Character limits, Character formatting and name spaces all via string based communication.  You do something wrong, LMS will shoot out an error code.  Your data may be truncated.  It could just be a slap on the wrist, but its the fine print you need to watch as a Developer when your interacting with the specification.  No one likes losing student data!\r\n\r\nI've now included packaging files that aid in importing your project into a LMS.  This has some base concepts of a ``` imsmanifest.xml ``` and sample QUnit tests you can run on a LMS.  Please feel free to customize the tests to fit your needs.  I keep writing more tests as time goes on.\r\n\r\n### Dissemination\r\nI'm slowly building up the Wiki documentation to try and address common questions I get from an array of people working at all levels of learning and teaching.  From Instructional Design, Requirements, Implementation, Release and Package, we have to be involved at all levels.  How to score, track progress, record interactions and identify success.  Some of this will be opinion, and at the end of the day I think thats going to be the lesson here.  SCORM is really an active opinion of recording student activity over the last decade.  How you apply it is really up to you.  Not everything is perfect either. You will run into things it can't do due to arbitrary limitations with in the specification.  Often I find some of these limitations are just originally suggestions and its ultimately up to how the LMS treats and enforces them.\r\n\r\n### Authors and Contributors\r\nI've relied on several friends to stress test, and guide my efforts.\r\nI'd like to thank Brandon Bradley (@brandonbradley) for schemas, diagrams, a virtual shoulder to cry on, and helping me get thru all the specification PDF's unscathed. \r\nI'd like to thank the guys over as cloud.scorm.com (Rustici) for furnishing SCORM with some validation and sanity checking because of of this was pretty rough to verify even with the documentation.  I'd also like to Claude Ostyn for his publishings online and tools."}